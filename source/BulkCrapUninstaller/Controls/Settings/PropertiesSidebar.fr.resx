<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="checkBoxOrphans.Text" xml:space="preserve">
    <value>Afficher les applications non enregistrées </value>
  </data>
  <data name="checkBoxOrphans.ToolTip" xml:space="preserve">
    <value>Afficher les applications n'ayant pas de désinstalleur enregistré.
Elles sont invisibles dans la plupart des gestionnaires de désinstallation, mais prennent quand même de la place. Les éléments non enregistrés sont marqués avec une couleur rouge.

Attention : vérifiez à deux fois avant de supprimer ces applications, elles pourraient être encore nécessaires !</value>
  </data>
  <data name="checkBoxInvalidTest.Text" xml:space="preserve">
    <value>Surligner les désinstalleurs invalides</value>
  </data>
  <data name="checkBoxInvalidTest.ToolTip" xml:space="preserve">
    <value>Utiliser la couleur grise pour identifier les désinstalleurs corrompus ou manquants.</value>
  </data>
  <data name="checkBoxCertTest.Text" xml:space="preserve">
    <value>Surligner les désinstalleurs certifiés</value>
  </data>
  <data name="checkBoxCertTest.ToolTip" xml:space="preserve">
    <value>Utiliser des couleurs pour identifier les désinstalleurs certifiés. Si le certificat a été vérifié avec succès, il utilise la couleur grise, autrement il utilise la couleur bleue.

Attention : la vérification peut mettre longtemps à se terminer.</value>
  </data>
  <data name="checkBoxListHideMicrosoft.Text" xml:space="preserve">
    <value>Cacher si publié par Microsoft</value>
  </data>
  <data name="checkBoxListHideMicrosoft.ToolTip" xml:space="preserve">
    <value>Filtrer tout ce qui a été publié par Microsoft. C'est aussi simple que cela.</value>
  </data>
  <data name="checkBoxListSysComp.Text" xml:space="preserve">
    <value>Montrer les composants système</value>
  </data>
  <data name="checkBoxListSysComp.ToolTip" xml:space="preserve">
    <value>Quelques désinstalleurs peuvent être marqués comme "composants système" pour les masquer dans la
liste Ajout/Suppression de programmes. Les pilotes sont souvent marqués avec cette balise.</value>
  </data>
  <data name="checkBoxListProtected.Text" xml:space="preserve">
    <value>Montrer les éléments protégés</value>
  </data>
  <data name="checkBoxListProtected.ToolTip" xml:space="preserve">
    <value>Les éléments protégés sont marqués avec la balise "NoRemove", signifiant que l'éditeur ne veut pas que vous les enleviez.</value>
  </data>
  <data name="checkBoxShowUpdates.Text" xml:space="preserve">
    <value>Montrer les mises à jour</value>
  </data>
  <data name="checkBoxShowUpdates.ToolTip" xml:space="preserve">
    <value>Mises à jour d'autres applications. En général elles sont désinstallées ensemble avec leur application parente, ainsi elles peuvent être ignorées.</value>
  </data>
  <data name="groupBox2.Text" xml:space="preserve">
    <value>Filtrage</value>
  </data>
  <data name="checkBoxViewCheckboxes.Text" xml:space="preserve">
    <value>Sélectionnner par cases à cocher</value>
  </data>
  <data name="checkBoxViewCheckboxes.ToolTip" xml:space="preserve">
    <value>Changer le style de sélection de la liste en cases à cocher. Elles sont plus fiables car un simple clic ne peut désélectionner tout.

Vous pouvez cocher de multiples éléments en les surlignant et en pressant la barre d'espace.</value>
  </data>
  <data name="checkBoxViewGroups.Text" xml:space="preserve">
    <value>Montrer les éléments en groupes</value>
  </data>
  <data name="checkBoxViewGroups.ToolTip" xml:space="preserve">
    <value>Grouper les éléments en fonction de la colonne 
utilisée pour les trier. 
Le groupage de la plupart des colonnes utilise un tri intelligent.</value>
  </data>
  <data name="groupBox1.Text" xml:space="preserve">
    <value>Réglages de la vue liste</value>
  </data>
  <data name="checkBoxShowStoreApps.Text" xml:space="preserve">
    <value>Montrer les applis du Windows Store</value>
  </data>
  <data name="checkBoxWinFeature.Text" xml:space="preserve">
    <value>Montrer les fonctionalités Windows</value>
  </data>
  <data name="checkBoxHighlightSpecial.Text" xml:space="preserve">
    <value>Surligner les désinstalleurs spéciaux</value>
  </data>
  <data name="checkBoxHighlightSpecial.ToolTip" xml:space="preserve">
    <value>Utiliser des couleurs pour différencier les applications spéciales, par exemple les applis du store et les Fonctionnalités Windows</value>
  </data>
  <data name="checkBoxTweaks.Text" xml:space="preserve">
    <value>Montrer les perfectionnements</value>
  </data>
</root>