//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BulkCrapUninstaller.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Localisable {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Localisable() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("BulkCrapUninstaller.Properties.Localisable", typeof(Localisable).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Default.
        /// </summary>
        internal static string DefaultLanguage {
            get {
                return ResourceManager.GetString("DefaultLanguage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Empty.
        /// </summary>
        internal static string Empty {
            get {
                return ResourceManager.GetString("Empty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File not found..
        /// </summary>
        internal static string Error_FileNotFound {
            get {
                return ResourceManager.GetString("Error_FileNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to save settings.
        /// </summary>
        internal static string Error_SaveSettingsFailed {
            get {
                return ResourceManager.GetString("Error_SaveSettingsFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select the directory with the applications to uninstall..
        /// </summary>
        internal static string FileTargeter_SelectDirectoryWithAppsToRemove {
            get {
                return ResourceManager.GetString("FileTargeter_SelectDirectoryWithAppsToRemove", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to GUID found.
        /// </summary>
        internal static string GuidFound {
            get {
                return ResourceManager.GetString("GuidFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to GUID missing.
        /// </summary>
        internal static string GuidMissing {
            get {
                return ResourceManager.GetString("GuidMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rating: {0}
        ///
        ///Positives:
        ///{1}
        ///
        ///Negatives:
        ///{2}.
        /// </summary>
        internal static string JunkRemove_Details_Message {
            get {
                return ResourceManager.GetString("JunkRemove_Details_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rating details.
        /// </summary>
        internal static string JunkRemove_Details_Title {
            get {
                return ResourceManager.GetString("JunkRemove_Details_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select down to....
        /// </summary>
        internal static string JunkRemove_SelectionBoxText {
            get {
                return ResourceManager.GetString("JunkRemove_SelectionBoxText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select where to save the backup. A new directory will be created..
        /// </summary>
        internal static string JunkRemoveWindow_SelectBackupDirectoryTitle {
            get {
                return ResourceManager.GetString("JunkRemoveWindow_SelectBackupDirectoryTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Creating a restore point....
        /// </summary>
        internal static string LoadingDialogTitleCreatingRestorePoint {
            get {
                return ResourceManager.GetString("LoadingDialogTitleCreatingRestorePoint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Loading Windows Features....
        /// </summary>
        internal static string LoadingDialogTitleLoadingWindowsFeatures {
            get {
                return ResourceManager.GetString("LoadingDialogTitleLoadingWindowsFeatures", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Searching for leftovers....
        /// </summary>
        internal static string LoadingDialogTitleLookingForJunk {
            get {
                return ResourceManager.GetString("LoadingDialogTitleLookingForJunk", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Populating uninstaller list....
        /// </summary>
        internal static string LoadingDialogTitlePopulatingList {
            get {
                return ResourceManager.GetString("LoadingDialogTitlePopulatingList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Running post-uninstall commands....
        /// </summary>
        internal static string LoadingDialogTitlePostUninstallCommands {
            get {
                return ResourceManager.GetString("LoadingDialogTitlePostUninstallCommands", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Running pre-uninstall commands....
        /// </summary>
        internal static string LoadingDialogTitlePreUninstallCommands {
            get {
                return ResourceManager.GetString("LoadingDialogTitlePreUninstallCommands", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Removing leftovers....
        /// </summary>
        internal static string LoadingDialogTitleRemovingJunk {
            get {
                return ResourceManager.GetString("LoadingDialogTitleRemovingJunk", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Searching for updates....
        /// </summary>
        internal static string LoadingDialogTitleSearchingForUpdates {
            get {
                return ResourceManager.GetString("LoadingDialogTitleSearchingForUpdates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Archived.
        /// </summary>
        internal static string LocalizedX509Certificate2_Archived {
            get {
                return ResourceManager.GetString("LocalizedX509Certificate2_Archived", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Extensions.
        /// </summary>
        internal static string LocalizedX509Certificate2_Extensions {
            get {
                return ResourceManager.GetString("LocalizedX509Certificate2_Extensions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Friendly Name.
        /// </summary>
        internal static string LocalizedX509Certificate2_FriendlyName {
            get {
                return ResourceManager.GetString("LocalizedX509Certificate2_FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Has Private Key.
        /// </summary>
        internal static string LocalizedX509Certificate2_HasPrivateKey {
            get {
                return ResourceManager.GetString("LocalizedX509Certificate2_HasPrivateKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Issuer.
        /// </summary>
        internal static string LocalizedX509Certificate2_Issuer {
            get {
                return ResourceManager.GetString("LocalizedX509Certificate2_Issuer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Issuer Name.
        /// </summary>
        internal static string LocalizedX509Certificate2_IssuerName {
            get {
                return ResourceManager.GetString("LocalizedX509Certificate2_IssuerName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Not After.
        /// </summary>
        internal static string LocalizedX509Certificate2_NotAfter {
            get {
                return ResourceManager.GetString("LocalizedX509Certificate2_NotAfter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Not Before.
        /// </summary>
        internal static string LocalizedX509Certificate2_NotBefore {
            get {
                return ResourceManager.GetString("LocalizedX509Certificate2_NotBefore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Private Key.
        /// </summary>
        internal static string LocalizedX509Certificate2_PrivateKey {
            get {
                return ResourceManager.GetString("LocalizedX509Certificate2_PrivateKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Public Key.
        /// </summary>
        internal static string LocalizedX509Certificate2_PublicKey {
            get {
                return ResourceManager.GetString("LocalizedX509Certificate2_PublicKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Raw Data.
        /// </summary>
        internal static string LocalizedX509Certificate2_RawData {
            get {
                return ResourceManager.GetString("LocalizedX509Certificate2_RawData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Serial Number.
        /// </summary>
        internal static string LocalizedX509Certificate2_SerialNumber {
            get {
                return ResourceManager.GetString("LocalizedX509Certificate2_SerialNumber", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Signature Algorithm.
        /// </summary>
        internal static string LocalizedX509Certificate2_SignatureAlgorithm {
            get {
                return ResourceManager.GetString("LocalizedX509Certificate2_SignatureAlgorithm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Subject.
        /// </summary>
        internal static string LocalizedX509Certificate2_Subject {
            get {
                return ResourceManager.GetString("LocalizedX509Certificate2_Subject", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Subject Name.
        /// </summary>
        internal static string LocalizedX509Certificate2_SubjectName {
            get {
                return ResourceManager.GetString("LocalizedX509Certificate2_SubjectName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Thumbprint.
        /// </summary>
        internal static string LocalizedX509Certificate2_Thumbprint {
            get {
                return ResourceManager.GetString("LocalizedX509Certificate2_Thumbprint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Version.
        /// </summary>
        internal static string LocalizedX509Certificate2_Version {
            get {
                return ResourceManager.GetString("LocalizedX509Certificate2_Version", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Renaming &quot;{0}&quot;.
        /// </summary>
        internal static string MainWindow_Rename_Description {
            get {
                return ResourceManager.GetString("MainWindow_Rename_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rename selected entry.
        /// </summary>
        internal static string MainWindow_Rename_Title {
            get {
                return ResourceManager.GetString("MainWindow_Rename_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Processing uninstallers {0}/{1}.
        /// </summary>
        internal static string MainWindow_Statusbar_ProcessingUninstallers {
            get {
                return ResourceManager.GetString("MainWindow_Statusbar_ProcessingUninstallers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refreshing startup information....
        /// </summary>
        internal static string MainWindow_Statusbar_RefreshingStartup {
            get {
                return ResourceManager.GetString("MainWindow_Statusbar_RefreshingStartup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ready.
        /// </summary>
        internal static string MainWindow_Statusbar_StatusReady {
            get {
                return ResourceManager.GetString("MainWindow_Statusbar_StatusReady", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} uninstallers selected.
        /// </summary>
        internal static string MainWindow_Statusbar_StatusSelection {
            get {
                return ResourceManager.GetString("MainWindow_Statusbar_StatusSelection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} uninstallers in total, {1}.
        /// </summary>
        internal static string MainWindow_Statusbar_Total {
            get {
                return ResourceManager.GetString("MainWindow_Statusbar_Total", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Following uninstallers will be restarted loudly:.
        /// </summary>
        internal static string MessageBoxes_AskToRetryFailedQuietAsLoud_Details {
            get {
                return ResourceManager.GetString("MessageBoxes_AskToRetryFailedQuietAsLoud_Details", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do you want to try running quiet uninstallers that failed as loud?.
        /// </summary>
        internal static string MessageBoxes_AskToRetryFailedQuietAsLoud_Header {
            get {
                return ResourceManager.GetString("MessageBoxes_AskToRetryFailedQuietAsLoud_Header", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Some uninstallers failed.
        /// </summary>
        internal static string MessageBoxes_AskToRetryFailedQuietAsLoud_Title {
            get {
                return ResourceManager.GetString("MessageBoxes_AskToRetryFailedQuietAsLoud_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There are unsaved changes in the opened uninstall list that will be lost by closing it..
        /// </summary>
        internal static string MessageBoxes_AskToSaveUninstallList_Details {
            get {
                return ResourceManager.GetString("MessageBoxes_AskToSaveUninstallList_Details", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Save changes to the opened uninstall list?.
        /// </summary>
        internal static string MessageBoxes_AskToSaveUninstallList_Message {
            get {
                return ResourceManager.GetString("MessageBoxes_AskToSaveUninstallList_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Save uninstall list.
        /// </summary>
        internal static string MessageBoxes_AskToSaveUninstallList_Title {
            get {
                return ResourceManager.GetString("MessageBoxes_AskToSaveUninstallList_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This will take you less than a minute but help the development greatly! All feedback is appreciated, be it a bug report, feature request or a simple thanks!
        ///
        ///You can send it later from the top menu bar (Help-&gt;Submit feedback)..
        /// </summary>
        internal static string MessageBoxes_AskToSubmitFeedback_Details {
            get {
                return ResourceManager.GetString("MessageBoxes_AskToSubmitFeedback_Details", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Would you like to send feedback concerning BCU?.
        /// </summary>
        internal static string MessageBoxes_AskToSubmitFeedback_Message {
            get {
                return ResourceManager.GetString("MessageBoxes_AskToSubmitFeedback_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error details: .
        /// </summary>
        internal static string MessageBoxes_BackupFailedQuestion_Details {
            get {
                return ResourceManager.GetString("MessageBoxes_BackupFailedQuestion_Details", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Registry backup failed, do you want to continue anyway?.
        /// </summary>
        internal static string MessageBoxes_BackupFailedQuestion_Message {
            get {
                return ResourceManager.GetString("MessageBoxes_BackupFailedQuestion_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You will be able to roll back all changes by double-clicking it afterwards.
        ///
        ///Files and directories will be moved to the recycle bin, you can restore them from there..
        /// </summary>
        internal static string MessageBoxes_BackupRegistryQuestion_Details {
            get {
                return ResourceManager.GetString("MessageBoxes_BackupRegistryQuestion_Details", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do you want to create a registry backup before continuing?.
        /// </summary>
        internal static string MessageBoxes_BackupRegistryQuestion_Message {
            get {
                return ResourceManager.GetString("MessageBoxes_BackupRegistryQuestion_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select exactly one uninstaller from the list. If you are using check-boxes make sure to check them..
        /// </summary>
        internal static string MessageBoxes_CanSelectOnlyOneItemInfo_Details {
            get {
                return ResourceManager.GetString("MessageBoxes_CanSelectOnlyOneItemInfo_Details", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You need to select only one entry for this action.
        /// </summary>
        internal static string MessageBoxes_CanSelectOnlyOneItemInfo_Message {
            get {
                return ResourceManager.GetString("MessageBoxes_CanSelectOnlyOneItemInfo_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Action failed.
        /// </summary>
        internal static string MessageBoxes_CanSelectOnlyOneItemInfo_Title {
            get {
                return ResourceManager.GetString("MessageBoxes_CanSelectOnlyOneItemInfo_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remaining uninstallers should be able to complete without any user intervention. You should still check in from time to time in case one of the uninstallers crashes..
        /// </summary>
        internal static string MessageBoxes_CanWalkAwayInfo_Details {
            get {
                return ResourceManager.GetString("MessageBoxes_CanWalkAwayInfo_Details", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can now leave the computer.
        /// </summary>
        internal static string MessageBoxes_CanWalkAwayInfo_Message {
            get {
                return ResourceManager.GetString("MessageBoxes_CanWalkAwayInfo_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Uninstall progress.
        /// </summary>
        internal static string MessageBoxes_CanWalkAwayInfo_Title {
            get {
                return ResourceManager.GetString("MessageBoxes_CanWalkAwayInfo_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Removing items marked with confidence lower than Good can be very dangerous! It is recommended that you verify that every single item is safe to delete..
        /// </summary>
        internal static string MessageBoxes_ConfirmLowConfidenceQuestion_Details {
            get {
                return ResourceManager.GetString("MessageBoxes_ConfirmLowConfidenceQuestion_Details", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do you really want to modify low-confidence items?.
        /// </summary>
        internal static string MessageBoxes_ConfirmLowConfidenceQuestion_Message {
            get {
                return ResourceManager.GetString("MessageBoxes_ConfirmLowConfidenceQuestion_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Following items will be removed from registry and will disappear from the uninstaller list, but will not be uninstalled.
        ///
        ///{0}.
        /// </summary>
        internal static string MessageBoxes_DeleteRegKeysConfirmation_Details {
            get {
                return ResourceManager.GetString("MessageBoxes_DeleteRegKeysConfirmation_Details", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Are you sure you want to remove selected uninstaller entries?.
        /// </summary>
        internal static string MessageBoxes_DeleteRegKeysConfirmation_Message {
            get {
                return ResourceManager.GetString("MessageBoxes_DeleteRegKeysConfirmation_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove keys from registry.
        /// </summary>
        internal static string MessageBoxes_DeleteRegKeysConfirmation_Title {
            get {
                return ResourceManager.GetString("MessageBoxes_DeleteRegKeysConfirmation_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///
        ///Error details:
        ///.
        /// </summary>
        internal static string MessageBoxes_Error_details {
            get {
                return ResourceManager.GetString("MessageBoxes_Error_details", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If the error persists try saving to a different directory, for example to the desktop..
        /// </summary>
        internal static string MessageBoxes_ExportFailed_Details {
            get {
                return ResourceManager.GetString("MessageBoxes_ExportFailed_Details", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error has been encountered while saving exported data.
        /// </summary>
        internal static string MessageBoxes_ExportFailed_Message {
            get {
                return ResourceManager.GetString("MessageBoxes_ExportFailed_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Export failed.
        /// </summary>
        internal static string MessageBoxes_ExportFailed_Title {
            get {
                return ResourceManager.GetString("MessageBoxes_ExportFailed_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Following command failed to execute:
        ///{0}.
        /// </summary>
        internal static string MessageBoxes_ExternalCommandFailed_Message {
            get {
                return ResourceManager.GetString("MessageBoxes_ExternalCommandFailed_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to External execute failed.
        /// </summary>
        internal static string MessageBoxes_ExternalCommandFailed_Title {
            get {
                return ResourceManager.GetString("MessageBoxes_ExternalCommandFailed_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to run some of the uninstallers.
        /// </summary>
        internal static string MessageBoxes_ForceRunUninstallFailedError_Header {
            get {
                return ResourceManager.GetString("MessageBoxes_ForceRunUninstallFailedError_Header", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Following  uninstallers failed to execute, likely because of a collision. Please wait for other uninstallers to finish and try again. 
        ///{0}
        ///
        ///You can try disabling collision detection in the settings, but it is not recommended..
        /// </summary>
        internal static string MessageBoxes_ForceRunUninstallFailedError_Message {
            get {
                return ResourceManager.GetString("MessageBoxes_ForceRunUninstallFailedError_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Force uninstallation.
        /// </summary>
        internal static string MessageBoxes_ForceRunUninstallFailedError_Title {
            get {
                return ResourceManager.GetString("MessageBoxes_ForceRunUninstallFailedError_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to BCUninstaller is uninstalling {0} application(s).
        /// </summary>
        internal static string MessageBoxes_GetSystemRestoreDescription {
            get {
                return ResourceManager.GetString("MessageBoxes_GetSystemRestoreDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Make sure you have not included any of the following characters:
        ///{0}.
        /// </summary>
        internal static string MessageBoxes_InvalidNewEntryName_Details {
            get {
                return ResourceManager.GetString("MessageBoxes_InvalidNewEntryName_Details", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Supplied name is empty or contains invalid characters.
        /// </summary>
        internal static string MessageBoxes_InvalidNewEntryName_Message {
            get {
                return ResourceManager.GetString("MessageBoxes_InvalidNewEntryName_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please note that this feature is intended only for power users that understand how it works. It is not necessary to remove these files and they will not affect system performance in any meaningful way..
        /// </summary>
        internal static string MessageBoxes_LookForJunkQuestion_Details {
            get {
                return ResourceManager.GetString("MessageBoxes_LookForJunkQuestion_Details", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do you want to look for leftovers from performed uninstallation(s)?.
        /// </summary>
        internal static string MessageBoxes_LookForJunkQuestion_Message {
            get {
                return ResourceManager.GetString("MessageBoxes_LookForJunkQuestion_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The selected application has no modify command specified. It might be necessary to uninstall, and then install it again to change install settings..
        /// </summary>
        internal static string MessageBoxes_ModifyCommandMissing_Details {
            get {
                return ResourceManager.GetString("MessageBoxes_ModifyCommandMissing_Details", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Selected application can&apos;t be modified.
        /// </summary>
        internal static string MessageBoxes_ModifyCommandMissing_Message {
            get {
                return ResourceManager.GetString("MessageBoxes_ModifyCommandMissing_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Modify application.
        /// </summary>
        internal static string MessageBoxes_ModifyCommandMissing_Title {
            get {
                return ResourceManager.GetString("MessageBoxes_ModifyCommandMissing_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The v4.0 framework is optional, but recommended. The features that rely on the framework will be disabled until you install it..
        /// </summary>
        internal static string MessageBoxes_Net4Missing_Details {
            get {
                return ResourceManager.GetString("MessageBoxes_Net4Missing_Details", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .NET Framework v4.0 was not found, some features will be disabled.
        /// </summary>
        internal static string MessageBoxes_Net4Missing_Message {
            get {
                return ResourceManager.GetString("MessageBoxes_Net4Missing_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .NET Framework v4.0 not found.
        /// </summary>
        internal static string MessageBoxes_Net4Missing_Title {
            get {
                return ResourceManager.GetString("MessageBoxes_Net4Missing_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No leftovers were found. There still might be some residue left so you can run a temporary file cleaner like CCleaner..
        /// </summary>
        internal static string MessageBoxes_NoJunkFoundInfo_Details {
            get {
                return ResourceManager.GetString("MessageBoxes_NoJunkFoundInfo_Details", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No leftovers were found.
        /// </summary>
        internal static string MessageBoxes_NoJunkFoundInfo_Message {
            get {
                return ResourceManager.GetString("MessageBoxes_NoJunkFoundInfo_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Make sure that your network cable is plugged in. If you are using Wi-Fi ensure that you have good signal strength..
        /// </summary>
        internal static string MessageBoxes_NoNetworkConnected_Details {
            get {
                return ResourceManager.GetString("MessageBoxes_NoNetworkConnected_Details", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can&apos;t connect to the internet, there are no networks available..
        /// </summary>
        internal static string MessageBoxes_NoNetworkConnected_Message {
            get {
                return ResourceManager.GetString("MessageBoxes_NoNetworkConnected_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open on-line content.
        /// </summary>
        internal static string MessageBoxes_NoNetworkConnected_Open_online_content {
            get {
                return ResourceManager.GetString("MessageBoxes_NoNetworkConnected_Open_online_content", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There was nothing to copy to the clipboard. Either no selected uninstaller has this bit of information or you didn&apos;t select anything..
        /// </summary>
        internal static string MessageBoxes_NothingToCopy_Message {
            get {
                return ResourceManager.GetString("MessageBoxes_NothingToCopy_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to To uninstall applications you must first select them from the list view. If you are using check-boxes, make sure that they are checked..
        /// </summary>
        internal static string MessageBoxes_NoUninstallersSelectedInfo_Details {
            get {
                return ResourceManager.GetString("MessageBoxes_NoUninstallersSelectedInfo_Details", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No uninstallers were selected, nothing to uninstall.
        /// </summary>
        internal static string MessageBoxes_NoUninstallersSelectedInfo_Message {
            get {
                return ResourceManager.GetString("MessageBoxes_NoUninstallersSelectedInfo_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Run uninstallers.
        /// </summary>
        internal static string MessageBoxes_NoUninstallersSelectedInfo_Title {
            get {
                return ResourceManager.GetString("MessageBoxes_NoUninstallersSelectedInfo_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No directories to open.
        /// </summary>
        internal static string MessageBoxes_OpenDirectories_NoDirsToOpen {
            get {
                return ResourceManager.GetString("MessageBoxes_OpenDirectories_NoDirsToOpen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This action will open {0} directories at once, are you sure you want to continue?.
        /// </summary>
        internal static string MessageBoxes_OpenDirectoriesMessageBox_OpenMultiple {
            get {
                return ResourceManager.GetString("MessageBoxes_OpenDirectoriesMessageBox_OpenMultiple", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error has been encountered while opening the directory.
        /// </summary>
        internal static string MessageBoxes_OpenDirectoryError_Message {
            get {
                return ResourceManager.GetString("MessageBoxes_OpenDirectoryError_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to load selected files.
        /// </summary>
        internal static string MessageBoxes_OpenUninstallListError_Message {
            get {
                return ResourceManager.GetString("MessageBoxes_OpenUninstallListError_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If you choose to keep current selection it will be merged with the opened list(s).
        /// </summary>
        internal static string MessageBoxes_OpenUninstallListQuestion_Details {
            get {
                return ResourceManager.GetString("MessageBoxes_OpenUninstallListQuestion_Details", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do you want to keep current selection?.
        /// </summary>
        internal static string MessageBoxes_OpenUninstallListQuestion_Message {
            get {
                return ResourceManager.GetString("MessageBoxes_OpenUninstallListQuestion_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error has been encountered while opening the URL.
        /// </summary>
        internal static string MessageBoxes_OpenUrlError_Message {
            get {
                return ResourceManager.GetString("MessageBoxes_OpenUrlError_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No URLs to open.
        /// </summary>
        internal static string MessageBoxes_OpenUrlsMessageBox_No_URLs_to_open_Title {
            get {
                return ResourceManager.GetString("MessageBoxes_OpenUrlsMessageBox_No_URLs_to_open_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This action will open {0} URLs at once, are you sure you want to continue?.
        /// </summary>
        internal static string MessageBoxes_OpenUrlsMessageBox_OpenMultiple_Message {
            get {
                return ResourceManager.GetString("MessageBoxes_OpenUrlsMessageBox_OpenMultiple_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Protected entry: {0}
        ///
        ///To modify this entry you need to disable uninstaller protection from the settings panel..
        /// </summary>
        internal static string MessageBoxes_ProtectedItemError_Details {
            get {
                return ResourceManager.GetString("MessageBoxes_ProtectedItemError_Details", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Selected entry is protected and can not be modified.
        /// </summary>
        internal static string MessageBoxes_ProtectedItemError_Message {
            get {
                return ResourceManager.GetString("MessageBoxes_ProtectedItemError_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Affected entries:
        ///{0}
        ///
        ///To modify these entries you need to disable uninstaller protection from the settings sidebar.You can remove them from the task and continue with other items if you want..
        /// </summary>
        internal static string MessageBoxes_ProtectedItemsWarningQuestion_Details {
            get {
                return ResourceManager.GetString("MessageBoxes_ProtectedItemsWarningQuestion_Details", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Some entries are protected and can not be modified.
        /// </summary>
        internal static string MessageBoxes_ProtectedItemsWarningQuestion_Message {
            get {
                return ResourceManager.GetString("MessageBoxes_ProtectedItemsWarningQuestion_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Following items are missing quiet uninstallers:
        ///{0}
        ///
        ///Do you want to use &quot;loud&quot; uninstallers for those items, or should they be removed them from the task?.
        /// </summary>
        internal static string MessageBoxes_QuietUninstallersNotAvailableQuestion_Details {
            get {
                return ResourceManager.GetString("MessageBoxes_QuietUninstallersNotAvailableQuestion_Details", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Some applications can&apos;t be uninstalled quietly.
        /// </summary>
        internal static string MessageBoxes_QuietUninstallersNotAvailableQuestion_Message {
            get {
                return ResourceManager.GetString("MessageBoxes_QuietUninstallersNotAvailableQuestion_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ratings not available.
        /// </summary>
        internal static string MessageBoxes_RatingErrorTitle {
            get {
                return ResourceManager.GetString("MessageBoxes_RatingErrorTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You have to enable ratings from the settings first..
        /// </summary>
        internal static string MessageBoxes_RatingsDisabled_Message {
            get {
                return ResourceManager.GetString("MessageBoxes_RatingsDisabled_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can&apos;t rate applications that are not installed properly..
        /// </summary>
        internal static string MessageBoxes_RatingUnavailable_Message {
            get {
                return ResourceManager.GetString("MessageBoxes_RatingUnavailable_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remember choice.
        /// </summary>
        internal static string MessageBoxes_RememberChoiceCheckbox {
            get {
                return ResourceManager.GetString("MessageBoxes_RememberChoiceCheckbox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All of your settings will be lost permanently. BCUninstaller will have to restart to complete this action..
        /// </summary>
        internal static string MessageBoxes_ResetSettingsConfirmation_Details {
            get {
                return ResourceManager.GetString("MessageBoxes_ResetSettingsConfirmation_Details", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Are you sure you want to reset all application settings?.
        /// </summary>
        internal static string MessageBoxes_ResetSettingsConfirmation_Message {
            get {
                return ResourceManager.GetString("MessageBoxes_ResetSettingsConfirmation_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Some settings will not take effect until the application is restarted..
        /// </summary>
        internal static string MessageBoxes_RestartNeededForSettingChangeQuestion_Details {
            get {
                return ResourceManager.GetString("MessageBoxes_RestartNeededForSettingChangeQuestion_Details", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do you want to restart BCU to apply new settings?.
        /// </summary>
        internal static string MessageBoxes_RestartNeededForSettingChangeQuestion_Message {
            get {
                return ResourceManager.GetString("MessageBoxes_RestartNeededForSettingChangeQuestion_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Change application settings.
        /// </summary>
        internal static string MessageBoxes_RestartNeededForSettingChangeQuestion_Title {
            get {
                return ResourceManager.GetString("MessageBoxes_RestartNeededForSettingChangeQuestion_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to save the list to a file.
        /// </summary>
        internal static string MessageBoxes_SaveUninstallListError_Message {
            get {
                return ResourceManager.GetString("MessageBoxes_SaveUninstallListError_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error has been encountered while opening the search page.
        /// </summary>
        internal static string MessageBoxes_SearchOnlineError_Message {
            get {
                return ResourceManager.GetString("MessageBoxes_SearchOnlineError_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Nothing to search for.
        /// </summary>
        internal static string MessageBoxes_SearchOnlineMessageBox_NothingToSearchFor_Message {
            get {
                return ResourceManager.GetString("MessageBoxes_SearchOnlineMessageBox_NothingToSearchFor_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I&apos;m sorry to see you leave! If you have a minute or two please drop a word on why you uninstalled BCU on my website (http://klocmansoftware.weebly.com/). I&apos;ll do my best to fix any legitimate problems..
        /// </summary>
        internal static string MessageBoxes_SelfUninstallQuestion_Details {
            get {
                return ResourceManager.GetString("MessageBoxes_SelfUninstallQuestion_Details", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Are you sure you want to uninstall BCUninstaller?.
        /// </summary>
        internal static string MessageBoxes_SelfUninstallQuestion_Message {
            get {
                return ResourceManager.GetString("MessageBoxes_SelfUninstallQuestion_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Uninstall BCUninstaller.
        /// </summary>
        internal static string MessageBoxes_SelfUninstallQuestion_Title {
            get {
                return ResourceManager.GetString("MessageBoxes_SelfUninstallQuestion_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If you are unsure if applications you are uninstalling are important or required to system stability it is recommended to create a restore point. 
        /// If anything breaks after the procedure you can then use System Restore to roll back the changes..
        /// </summary>
        internal static string MessageBoxes_SysRestoreBeginQuestion_Details {
            get {
                return ResourceManager.GetString("MessageBoxes_SysRestoreBeginQuestion_Details", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do you want to create a restore point before continuing?.
        /// </summary>
        internal static string MessageBoxes_SysRestoreBeginQuestion_Message {
            get {
                return ResourceManager.GetString("MessageBoxes_SysRestoreBeginQuestion_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The restore point WAS NOT CREATED, you will not be able to restore changes! Do you want to continue with the uninstallation anyway?.
        /// </summary>
        internal static string MessageBoxes_SysRestoreContinueAfterError_Details {
            get {
                return ResourceManager.GetString("MessageBoxes_SysRestoreContinueAfterError_Details", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to create a new restore point.
        /// </summary>
        internal static string MessageBoxes_SysRestoreContinueAfterError_Message {
            get {
                return ResourceManager.GetString("MessageBoxes_SysRestoreContinueAfterError_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Selecting &quot;Terminate&quot; will immediately close the running uninstaller and might result in uninstallation not being completed. Usually it is possible to run the uninstaller again to finish the uninstallation.
        ///
        ///Alternatively you can skip waiting for this process. Skipping will let the uninstaller continue working while the task moves on to the next item. Keep in mind that some uninstallers can fail to run until the skipped process finishes..
        /// </summary>
        internal static string MessageBoxes_TaskSkip_Details {
            get {
                return ResourceManager.GetString("MessageBoxes_TaskSkip_Details", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do you want to skip waiting for the currently running uninstaller?.
        /// </summary>
        internal static string MessageBoxes_TaskSkip_Message {
            get {
                return ResourceManager.GetString("MessageBoxes_TaskSkip_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Skip currently running task.
        /// </summary>
        internal static string MessageBoxes_TaskSkip_Title {
            get {
                return ResourceManager.GetString("MessageBoxes_TaskSkip_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stopping the task prematurely will not revert any changes. Currently running uninstaller won&apos;t be stopped, the task will wait for it to finish..
        /// </summary>
        internal static string MessageBoxes_TaskStopConfirmation_Details {
            get {
                return ResourceManager.GetString("MessageBoxes_TaskStopConfirmation_Details", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Are you sure you want to stop currently running task?.
        /// </summary>
        internal static string MessageBoxes_TaskStopConfirmation_Message {
            get {
                return ResourceManager.GetString("MessageBoxes_TaskStopConfirmation_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stop current uninstall task.
        /// </summary>
        internal static string MessageBoxes_TaskStopConfirmation_Title {
            get {
                return ResourceManager.GetString("MessageBoxes_TaskStopConfirmation_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Copy to clipboard.
        /// </summary>
        internal static string MessageBoxes_Title_Copy_to_clipboard {
            get {
                return ResourceManager.GetString("MessageBoxes_Title_Copy_to_clipboard", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create restore point.
        /// </summary>
        internal static string MessageBoxes_Title_Create_restore_point {
            get {
                return ResourceManager.GetString("MessageBoxes_Title_Create_restore_point", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Junk/Leftover removal.
        /// </summary>
        internal static string MessageBoxes_Title_Junk_Leftover_removal {
            get {
                return ResourceManager.GetString("MessageBoxes_Title_Junk_Leftover_removal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Leftover removal.
        /// </summary>
        internal static string MessageBoxes_Title_Leftover_removal {
            get {
                return ResourceManager.GetString("MessageBoxes_Title_Leftover_removal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Modify protected item.
        /// </summary>
        internal static string MessageBoxes_Title_Modify_protected_items {
            get {
                return ResourceManager.GetString("MessageBoxes_Title_Modify_protected_items", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open directories.
        /// </summary>
        internal static string MessageBoxes_Title_Open_directories {
            get {
                return ResourceManager.GetString("MessageBoxes_Title_Open_directories", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open Uninstall List.
        /// </summary>
        internal static string MessageBoxes_Title_Open_Uninstall_List {
            get {
                return ResourceManager.GetString("MessageBoxes_Title_Open_Uninstall_List", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open URLs.
        /// </summary>
        internal static string MessageBoxes_Title_Open_urls {
            get {
                return ResourceManager.GetString("MessageBoxes_Title_Open_urls", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Quiet uninstall.
        /// </summary>
        internal static string MessageBoxes_Title_Quiet_uninstall {
            get {
                return ResourceManager.GetString("MessageBoxes_Title_Quiet_uninstall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rename uninstaller.
        /// </summary>
        internal static string MessageBoxes_Title_Rename_uninstaller {
            get {
                return ResourceManager.GetString("MessageBoxes_Title_Rename_uninstaller", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Restore default settings.
        /// </summary>
        internal static string MessageBoxes_Title_Restore_default_settings {
            get {
                return ResourceManager.GetString("MessageBoxes_Title_Restore_default_settings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Save Uninstall List.
        /// </summary>
        internal static string MessageBoxes_Title_Save_Uninstall_List {
            get {
                return ResourceManager.GetString("MessageBoxes_Title_Save_Uninstall_List", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Search for updates.
        /// </summary>
        internal static string MessageBoxes_Title_Search_for_updates {
            get {
                return ResourceManager.GetString("MessageBoxes_Title_Search_for_updates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Search on line.
        /// </summary>
        internal static string MessageBoxes_Title_Search_online {
            get {
                return ResourceManager.GetString("MessageBoxes_Title_Search_online", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Submit feedback.
        /// </summary>
        internal static string MessageBoxes_Title_Submit_feedback {
            get {
                return ResourceManager.GetString("MessageBoxes_Title_Submit_feedback", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Another uninstall task is already running. Please wait for it to finish and then try again..
        /// </summary>
        internal static string MessageBoxes_UninstallAlreadyRunning_Message {
            get {
                return ResourceManager.GetString("MessageBoxes_UninstallAlreadyRunning_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Uninstall from directory.
        /// </summary>
        internal static string MessageBoxes_UninstallFromDirectory_Title {
            get {
                return ResourceManager.GetString("MessageBoxes_UninstallFromDirectory_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Make sure that you selected the correct directory and that the application&apos;s executables are still present..
        /// </summary>
        internal static string MessageBoxes_UninstallFromDirectoryNothingFound_Details {
            get {
                return ResourceManager.GetString("MessageBoxes_UninstallFromDirectoryNothingFound_Details", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No applications were found in the specified directory.
        /// </summary>
        internal static string MessageBoxes_UninstallFromDirectoryNothingFound_Message {
            get {
                return ResourceManager.GetString("MessageBoxes_UninstallFromDirectoryNothingFound_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do you want to run this uninstaller?.
        /// </summary>
        internal static string MessageBoxes_UninstallFromDirectoryUninstallerFound_Details {
            get {
                return ResourceManager.GetString("MessageBoxes_UninstallFromDirectoryUninstallerFound_Details", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Found an uninstaller for {0}.
        /// </summary>
        internal static string MessageBoxes_UninstallFromDirectoryUninstallerFound_Message {
            get {
                return ResourceManager.GetString("MessageBoxes_UninstallFromDirectoryUninstallerFound_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Selected uninstaller doesn&apos;t have a valid Guid for use with MsiExec..
        /// </summary>
        internal static string MessageBoxes_UninstallMsiGuidMissing_Details {
            get {
                return ResourceManager.GetString("MessageBoxes_UninstallMsiGuidMissing_Details", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The selected entry can&apos;t be uninstalled using the MsiExec installer.
        /// </summary>
        internal static string MessageBoxes_UninstallMsiGuidMissing_Message {
            get {
                return ResourceManager.GetString("MessageBoxes_UninstallMsiGuidMissing_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Uninstall using Msi.
        /// </summary>
        internal static string MessageBoxes_UninstallMsiGuidMissing_Title {
            get {
                return ResourceManager.GetString("MessageBoxes_UninstallMsiGuidMissing_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to BCUninstaller will automatically download the update and apply it after a restart. Please note that you might lose your settings in the process. 
        ///
        ///Changelog:
        ///- {0}
        ///
        ///Warning: During update the folder &quot;Update&quot; and the file &quot;Update.zip&quot; inside of the BCU directory will be removed..
        /// </summary>
        internal static string MessageBoxes_UpdateAskToDownload_Details {
            get {
                return ResourceManager.GetString("MessageBoxes_UpdateAskToDownload_Details", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to New version {0} is available, do you want to upgrade now?.
        /// </summary>
        internal static string MessageBoxes_UpdateAskToDownload_Message {
            get {
                return ResourceManager.GetString("MessageBoxes_UpdateAskToDownload_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Make sure that BCUninstaller is not blocked in your firewall and that you have a working internet connection.
        ///
        ///.
        /// </summary>
        internal static string MessageBoxes_UpdateFailed_Details {
            get {
                return ResourceManager.GetString("MessageBoxes_UpdateFailed_Details", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Encountered an error while checking for updates.
        /// </summary>
        internal static string MessageBoxes_UpdateFailed_Message {
            get {
                return ResourceManager.GetString("MessageBoxes_UpdateFailed_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No updates were found at this time, you have the latest version.
        ///
        ///Want some functionality added or a bug fixed? Please send me your feedback using &quot;Help-&gt;Submit feedback&quot; menu..
        /// </summary>
        internal static string MessageBoxes_UpdateUptodate_Details {
            get {
                return ResourceManager.GetString("MessageBoxes_UpdateUptodate_Details", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Current version is up to date.
        /// </summary>
        internal static string MessageBoxes_UpdateUptodate_Message {
            get {
                return ResourceManager.GetString("MessageBoxes_UpdateUptodate_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Not available.
        /// </summary>
        internal static string NotAvailable {
            get {
                return ResourceManager.GetString("NotAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No valid files or directories were selected. Make sure you have access to them, and they aren&apos;t marked as system files..
        /// </summary>
        internal static string NukeWindow_NoFilesSelected_Message {
            get {
                return ResourceManager.GetString("NukeWindow_NoFilesSelected_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Look for application.
        /// </summary>
        internal static string NukeWindow_NoFilesSelected_Title {
            get {
                return ResourceManager.GetString("NukeWindow_NoFilesSelected_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Finishing up....
        /// </summary>
        internal static string Progress_Finishing {
            get {
                return ResourceManager.GetString("Progress_Finishing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Loading icons.
        /// </summary>
        internal static string Progress_Finishing_Icons {
            get {
                return ResourceManager.GetString("Progress_Finishing_Icons", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Searching for start-up entries.
        /// </summary>
        internal static string Progress_Finishing_Startup {
            get {
                return ResourceManager.GetString("Progress_Finishing_Startup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error.
        /// </summary>
        internal static string PropertiesWindow_Table_Error {
            get {
                return ResourceManager.GetString("PropertiesWindow_Table_Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File doesn&apos;t exist..
        /// </summary>
        internal static string PropertiesWindow_Table_ErrorDoesntExist {
            get {
                return ResourceManager.GetString("PropertiesWindow_Table_ErrorDoesntExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This application does not have a valid registry entry.
        /// </summary>
        internal static string PropertiesWindow_Table_ErrorMissingRegistry {
            get {
                return ResourceManager.GetString("PropertiesWindow_Table_ErrorMissingRegistry", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This application does not have a valid uninstaller.
        /// </summary>
        internal static string PropertiesWindow_Table_ErrorMissingUninstaller {
            get {
                return ResourceManager.GetString("PropertiesWindow_Table_ErrorMissingUninstaller", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Nothing to display. This application is uninstalled using Windows Installer (MsiExec)..
        /// </summary>
        internal static string PropertiesWindow_Table_ErrorMsi {
            get {
                return ResourceManager.GetString("PropertiesWindow_Table_ErrorMsi", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Certificate is missing.
        /// </summary>
        internal static string PropertiesWindow_Table_ErrorNoCertificate {
            get {
                return ResourceManager.GetString("PropertiesWindow_Table_ErrorNoCertificate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Name.
        /// </summary>
        internal static string PropertiesWindow_Table_Name {
            get {
                return ResourceManager.GetString("PropertiesWindow_Table_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Value.
        /// </summary>
        internal static string PropertiesWindow_Table_Value {
            get {
                return ResourceManager.GetString("PropertiesWindow_Table_Value", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} applications.
        /// </summary>
        internal static string RateTitle_Counted {
            get {
                return ResourceManager.GetString("RateTitle_Counted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Average rating: {0}; My rating: {1}.
        /// </summary>
        internal static string RatingEntry_ToString {
            get {
                return ResourceManager.GetString("RatingEntry_ToString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There are no entries matching your search criteria..
        /// </summary>
        internal static string SearchNothingFoundMessage {
            get {
                return ResourceManager.GetString("SearchNothingFoundMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to x64.
        /// </summary>
        internal static string Str64Bit {
            get {
                return ResourceManager.GetString("Str64Bit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DEBUG.
        /// </summary>
        internal static string StrDebug {
            get {
                return ResourceManager.GetString("StrDebug", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to BCUninstaller export
        ///Publisher | Version | Date | Size | Registry | Uninstaller type | Uninstall string | Quiet uninstall string | Comments.
        /// </summary>
        internal static string StrExportHeader {
            get {
                return ResourceManager.GetString("StrExportHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Portable.
        /// </summary>
        internal static string StrIsPortable {
            get {
                return ResourceManager.GetString("StrIsPortable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to call the API.
        /// </summary>
        internal static string SysRestoreGenericError {
            get {
                return ResourceManager.GetString("SysRestoreGenericError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to find any applications inside {0}.
        /// </summary>
        internal static string Uninstaller_GetApplicationsFromDirectories_NothingFound_Message {
            get {
                return ResourceManager.GetString("Uninstaller_GetApplicationsFromDirectories_NothingFound_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Look for applications.
        /// </summary>
        internal static string Uninstaller_GetApplicationsFromDirectories_NothingFound_Title {
            get {
                return ResourceManager.GetString("Uninstaller_GetApplicationsFromDirectories_NothingFound_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select directory with applications that you want to remove..
        /// </summary>
        internal static string UninstallFromDirectory_FolderBrowse {
            get {
                return ResourceManager.GetString("UninstallFromDirectory_FolderBrowse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Scanning specified directory....
        /// </summary>
        internal static string UninstallFromDirectory_ScanningTitle {
            get {
                return ResourceManager.GetString("UninstallFromDirectory_ScanningTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Task finished.
        /// </summary>
        internal static string UninstallProgressWindow_TaskDone {
            get {
                return ResourceManager.GetString("UninstallProgressWindow_TaskDone", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Uninstalling.
        /// </summary>
        internal static string UninstallProgressWindow_Uninstalling {
            get {
                return ResourceManager.GetString("UninstallProgressWindow_Uninstalling", resourceCulture);
            }
        }
    }
}
