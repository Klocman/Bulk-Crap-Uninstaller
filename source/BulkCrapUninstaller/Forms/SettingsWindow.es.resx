<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="checkBoxUpdateSearch.Text" xml:space="preserve">
    <value>Buscar actualizaciones al iniciar</value>
  </data>
  <data name="label9.Text" xml:space="preserve">
    <value>Idioma de la aplicación:</value>
  </data>
  <data name="label5.Text" xml:space="preserve">
    <value>Línea de comandos antes de que se inicie la desinstalación</value>
  </data>
  <data name="label6.Text" xml:space="preserve">
    <value>Línea de comando después de que la desinstalación finalice</value>
  </data>
  <data name="checkBoxAutoLoad.Text" xml:space="preserve">
    <value>Cargar automáticamente la lista de desinstalación llamada "Default.bcul" al iniciar</value>
  </data>
  <data name="checkBoxRatings.Text" xml:space="preserve">
    <value>Activar calificaciones de las aplicaciones</value>
  </data>
  <data name="tabPageFolders.Text" xml:space="preserve">
    <value>Carpetas</value>
  </data>
  <data name="$this.Text" xml:space="preserve">
    <value>Configuración de Bulk Crap Uninstaller</value>
  </data>
  <data name="groupBoxExternal.Text" xml:space="preserve">
    <value>Aplicaciones externas</value>
  </data>
  <data name="button2.Text" xml:space="preserve">
    <value>&amp;Cerrar</value>
  </data>
  <data name="tabPageGeneral.Text" xml:space="preserve">
    <value>General</value>
  </data>
  <data name="tabPage1.Text" xml:space="preserve">
    <value>Desinstalación</value>
  </data>
  <data name="tabPageExternal.Text" xml:space="preserve">
    <value>Herramientas externas</value>
  </data>
  <data name="groupBoxProgramFolders.Text" xml:space="preserve">
    <value>Carpetas de instalación de programas</value>
  </data>
  <data name="label2.Text" xml:space="preserve">
    <value>Crear un punto de restauración antes de desinstalar</value>
  </data>
  <data name="groupBoxMessages.Text" xml:space="preserve">
    <value>Cajas de mensaje</value>
  </data>
  <data name="checkBoxSendStats.Text" xml:space="preserve">
    <value>Enviar estadísticas de uso anónimas</value>
  </data>
  <data name="label1.Text" xml:space="preserve">
    <value>Buscar restos tras desinstalar</value>
  </data>
  <data name="label10.Text" xml:space="preserve">
    <value>Reinicie la aplicación para cambiar el idioma.</value>
  </data>
  <data name="groupBoxMisc.Text" xml:space="preserve">
    <value>Variedad</value>
  </data>
  <data name="checkBoxLoud.Text" xml:space="preserve">
    <value>Preguntar para eliminar desinstaladores fuertes de una tarea silenciosa</value>
  </data>
  <data name="checkBoxBackup.Text" xml:space="preserve">
    <value>Preguntar si crear un backup del registro antes eliminar los restos</value>
  </data>
  <data name="checkBoxEnableExternal.Text" xml:space="preserve">
    <value>Permitir la ejecución de aplicaciones externas</value>
  </data>
  <data name="label7.Text" xml:space="preserve">
    <value>Puede especificar los comandos que se ejecutarán antes y después de la desinstalación. Una línea es igual a un comando y se ejecutará como si utilizara el diálogo "Ejecutar...".

BCU esperará hasta que el comando activado se complete antes de ejecutar el siguiente.</value>
  </data>
  <data name="labelProgramFolders.Text" xml:space="preserve">
    <value>Puede indicar carpetas en las que instale sus aplicaciones (p,ej, D:\Aplicaciones). Estas carpetas serán utilizadas por BCU para buscar restos, aplicaciones no registradas y otras cosas. Si bien no es necesario, una lista de estas carpetas permitirá BCU trabajar mejor.

Las carpetas de Windows predeterminadas siempre se analizan, no es necesario incluirlas en esta lista.

Utilice rutas de directorio completas, una ruta por línea. Las rutas no válidas y los directorios no existentes se ignorarán.</value>
  </data>
  <data name="tabPageMisc.Text" xml:space="preserve">
    <value>Variados</value>
  </data>
  <data name="checkBoxShowAllBadJunk.Text" xml:space="preserve">
    <value>Mostrar siempre restos de baja confianza</value>
  </data>
  <data name="checkBoxNeverFeedback.Text" xml:space="preserve">
    <value>Nunca solicitar comentarios o ayuda</value>
  </data>
  <data name="checkBoxScanSteam.Text" xml:space="preserve">
    <value>Steam</value>
  </data>
  <data name="checkBoxScanRegistry.Text" xml:space="preserve">
    <value>Registro (se recomienda dejar habilitado)</value>
  </data>
  <data name="checkBoxScanDrives.Text" xml:space="preserve">
    <value>Unidades (detecta aplicaciones no registradas)</value>
  </data>
  <data name="checkBoxPreDefined.Text" xml:space="preserve">
    <value>Basado en reglas predefinidas</value>
  </data>
  <data name="groupBox1.Text" xml:space="preserve">
    <value>Buscar aplicaciones en...</value>
  </data>
  <data name="groupBoxAppStores.Text" xml:space="preserve">
    <value>Almacenes de aplicaciones para escanear</value>
  </data>
  <data name="tabPageDetection.Text" xml:space="preserve">
    <value>Detección</value>
  </data>
  <data name="checkBoxScanStoreApps.Text" xml:space="preserve">
    <value>Apps de Windows Store</value>
  </data>
  <data name="checkBoxScanWinFeatures.Text" xml:space="preserve">
    <value>Características de Windows</value>
  </data>
  <data name="labelWinFeatureInfo.Text" xml:space="preserve">
    <value>Detección de características de Windows utiliza WMI, y puede ser lento o incluso fallar en algunos sistemas (por lo general indica corrupción del sistema).</value>
  </data>
  <data name="checkBoxScanWinUpdates.Text" xml:space="preserve">
    <value>Actualización de Windows</value>
  </data>
  <data name="labelWinUpdateInfo.Text" xml:space="preserve">
    <value>La detección de actualizaciones de Windows utiliza WUA, que es lento. Puede tardar un par de minutos en completarse.</value>
  </data>
  <data name="checkBoxAutoInstallFolderDetect.Text" xml:space="preserve">
    <value>Buscar siempre las carpetas de instalación personalizadas</value>
  </data>
</root>