<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="label5.Text" xml:space="preserve">
    <value>Komendy do wykonania przed dezinstalacją</value>
  </data>
  <data name="label6.Text" xml:space="preserve">
    <value>Komendy do wykonania po dezinstalacji</value>
  </data>
  <data name="checkBoxUpdateSearch.Text" xml:space="preserve">
    <value>Szukaj uaktualnień po starcie aplikacji</value>
  </data>
  <data name="checkBoxSendStats.Text" xml:space="preserve">
    <value>Wysyłaj anonimowe statystyki</value>
  </data>
  <data name="label9.Text" xml:space="preserve">
    <value>Język aplikacji</value>
  </data>
  <data name="label10.Text" xml:space="preserve">
    <value>Aby dokończyć zmianę języka będzie wymagane ponownie uruchomienie aplikacji.</value>
  </data>
  <data name="groupBoxMisc.Text" xml:space="preserve">
    <value>Pozostałe</value>
  </data>
  <data name="checkBoxLoud.Text" xml:space="preserve">
    <value>Zapytaj czy usunąć głośne dezinstalatory z cichego zadania</value>
  </data>
  <data name="checkBoxBackup.Text" xml:space="preserve">
    <value>Zapytaj o utworzenie kopii zapasowej rejestru</value>
  </data>
  <data name="label1.Text" xml:space="preserve">
    <value>Szukaj pozostałości po dezinstalacji</value>
  </data>
  <data name="label2.Text" xml:space="preserve">
    <value>Utwórz punkt przywracania</value>
  </data>
  <data name="groupBoxMessages.Text" xml:space="preserve">
    <value>Okna komunikatów</value>
  </data>
  <data name="checkBoxEnableExternal.Text" xml:space="preserve">
    <value>Włącz uruchamianie zewnętrznych aplikacji</value>
  </data>
  <data name="label7.Text" xml:space="preserve">
    <value>Możesz określić komendy które zostaną wykonane przed i po dezinstalacji. Jedna linia zawiera jedną komendę, która zostanie wykonana tak jak przez okno "Uruchom...".

BCU będzie czekać aż uruchomiona komenda zakończy pracę przed uruchomieniem następnej.</value>
  </data>
  <data name="groupBoxExternal.Text" xml:space="preserve">
    <value>Zewnętrzne aplikacje</value>
  </data>
  <data name="button2.Text" xml:space="preserve">
    <value>&amp;Zamknij</value>
  </data>
  <data name="tabPageGeneral.Text" xml:space="preserve">
    <value>Ogólne</value>
  </data>
  <data name="tabPageExternal.Text" xml:space="preserve">
    <value>Narzedzia zewnetrzne</value>
  </data>
  <data name="tabPageMisc.Text" xml:space="preserve">
    <value>Różne</value>
  </data>
  <data name="$this.Text" xml:space="preserve">
    <value>Ustawienia BCUninstaller</value>
  </data>
  <data name="labelProgramFolders.Text" xml:space="preserve">
    <value>Możesz określić niestandardowe foldery instalacji aplikacji (np D: \ Aplikacje). Lista ta będzie wykorzystywana przez BCU do wyszukiwania resztek po dezinstalacji, niezarejestrowanych aplikacji, i kilku innych rzeczy. O ile nie jest ona konieczna, lista tych folderach usprawni działanie BCU.

Domyślne foldery systemu Windows są zawsze zawarte przeszukiwane, nie musisz ich dodawać.

Użyj pełnych ścieżek folderów, jedna ścieżka na linię. Nieprawidłowe ścieżki i nieistniejące foldery będą ignorowane.</value>
  </data>
  <data name="groupBoxProgramFolders.Text" xml:space="preserve">
    <value>Foldery instalacji programów</value>
  </data>
  <data name="tabPageFolders.Text" xml:space="preserve">
    <value>Foldery</value>
  </data>
  <data name="checkBoxAutoLoad.Text" xml:space="preserve">
    <value>Automatycznie otwórz listę "Default.bcul" na starcie</value>
  </data>
  <data name="checkBoxRatings.Text" xml:space="preserve">
    <value>Włącz oceny użytkowników dla aplikacji</value>
  </data>
  <data name="tabPage1.Text" xml:space="preserve">
    <value>Dezinstalacja</value>
  </data>
  <data name="checkBoxShowAllBadJunk.Text" xml:space="preserve">
    <value>Zawsze pokazuj śmieci z niskim wynikiem</value>
  </data>
  <data name="checkBoxNeverFeedback.Text" xml:space="preserve">
    <value>Nigdy nie pytaj o opinię lub pomoc</value>
  </data>
  <data name="checkBoxScanSteam.Text" xml:space="preserve">
    <value>Steam</value>
  </data>
  <data name="checkBoxScanStoreApps.Text" xml:space="preserve">
    <value>Aplikacje Windows Store</value>
  </data>
  <data name="checkBoxScanWinFeatures.Text" xml:space="preserve">
    <value>Funkcje systemu Windows</value>
  </data>
  <data name="labelWinFeatureInfo.Text" xml:space="preserve">
    <value>Wykrywanie funkcji systemu Windows wykorzystuje WMI i może działać wolno, lub nawet wcale na niektórych systemach (zwykle oznacza to uszkodzenie systemu).</value>
  </data>
  <data name="checkBoxScanWinUpdates.Text" xml:space="preserve">
    <value>Aktualizacje systemu Windows</value>
  </data>
  <data name="labelWinUpdateInfo.Text" xml:space="preserve">
    <value>Wykrywanie aktualizacji systemu Windows używa technologii WUA, która działa wolno. Skanowanie może potrwać kilka minut.</value>
  </data>
  <data name="groupBoxAppStores.Text" xml:space="preserve">
    <value>Typy aplikacji do skanowania</value>
  </data>
  <data name="tabPageDetection.Text" xml:space="preserve">
    <value>Wykrywanie</value>
  </data>
  <data name="checkBoxScanRegistry.Text" xml:space="preserve">
    <value>Rejestr (zalecane włączenie)</value>
  </data>
  <data name="checkBoxScanDrives.Text" xml:space="preserve">
    <value>Dyski (wykrywa niezarejestrowane programy)</value>
  </data>
  <data name="checkBoxPreDefined.Text" xml:space="preserve">
    <value>Ręcznie sprecyzowane sygnatury</value>
  </data>
  <data name="groupBox1.Text" xml:space="preserve">
    <value>Szukwaj aplikacji w...</value>
  </data>
  <data name="checkBoxAutoInstallFolderDetect.Text" xml:space="preserve">
    <value>Spróbuj wykryć niestandardowe foldery z programami automatycznie</value>
  </data>
</root>