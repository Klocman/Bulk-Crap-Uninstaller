<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="label5.Text" xml:space="preserve">
    <value>卸载程序启动前命令行</value>
  </data>
  <data name="label6.Text" xml:space="preserve">
    <value>卸载程序结束后命令行</value>
  </data>
  <data name="checkBoxAutoLoad.Text" xml:space="preserve">
    <value>启动时自动加载名为"Default.bcul"的卸载程序列表</value>
  </data>
  <data name="checkBoxColorblind.Text" xml:space="preserve">
    <value>色盲模式</value>
    <comment>Switches colors to be better for color-blind people</comment>
  </data>
  <data name="checkBoxDpiaware.Text" xml:space="preserve">
    <value>启用DPI感知界面缩放</value>
  </data>
  <data name="groupBoxMisc.Text" xml:space="preserve">
    <value>杂项</value>
  </data>
  <data name="checkBoxRatings.Text" xml:space="preserve">
    <value>启用应用程序用户评分</value>
  </data>
  <data name="checkBoxUpdateSearch.Text" xml:space="preserve">
    <value>启动时搜索更新</value>
  </data>
  <data name="checkBoxSendStats.Text" xml:space="preserve">
    <value>发送匿名使用情况统计信息</value>
  </data>
  <data name="label9.Text" xml:space="preserve">
    <value>应用程序语言:</value>
  </data>
  <data name="label10.Text" xml:space="preserve">
    <value>必须重新启动应用程序才能使语言更改生效。</value>
  </data>
  <data name="radioButtonBackupAsk.Text" xml:space="preserve">
    <value>创建时总是询问</value>
  </data>
  <data name="radioButtonBackupNever.Text" xml:space="preserve">
    <value>创建时从不询问</value>
  </data>
  <data name="radioButtonBackupAuto.Text" xml:space="preserve">
    <value>自动在目录中创建:</value>
  </data>
  <data name="groupBoxBackup.Text" xml:space="preserve">
    <value>删除前备份</value>
  </data>
  <data name="checkBoxShowAllBadJunk.Text" xml:space="preserve">
    <value>总是显示低置信度垃圾</value>
  </data>
  <data name="checkBoxLoud.Text" xml:space="preserve">
    <value>从静默任务中删除交互卸载程序时询问</value>
  </data>
  <data name="checkBoxNeverFeedback.Text" xml:space="preserve">
    <value>从不询问反馈或帮助</value>
  </data>
  <data name="label1.Text" xml:space="preserve">
    <value>卸载后搜索垃圾</value>
  </data>
  <data name="label2.Text" xml:space="preserve">
    <value>卸载前创建还原点</value>
  </data>
  <data name="groupBoxMessages.Text" xml:space="preserve">
    <value>消息框</value>
  </data>
  <data name="checkBoxEnableExternal.Text" xml:space="preserve">
    <value>启用外部应用程序的执行</value>
  </data>
  <data name="label7.Text" xml:space="preserve">
    <value>你可以指定将在卸载前后运行的命令。一行一个命令，执行时就像使用"运行..."对话框一样。

BCU将等待当前运行的命令完成后再执行下一个命令。</value>
  </data>
  <data name="groupBoxExternal.Text" xml:space="preserve">
    <value>外部应用程序</value>
  </data>
  <data name="button2.Text" xml:space="preserve">
    <value>关闭</value>
  </data>
  <data name="tabPageGeneral.Text" xml:space="preserve">
    <value>常规</value>
  </data>
  <data name="groupBoxLanguage.Text" xml:space="preserve">
    <value>语言</value>
  </data>
  <data name="tabPageInterface.Text" xml:space="preserve">
    <value>界面</value>
  </data>
  <data name="tabPageUninstallation.Text" xml:space="preserve">
    <value>卸载</value>
  </data>
  <data name="labelWinUpdateInfo.Text" xml:space="preserve">
    <value>使用WUA检测Windows更新，速度很慢。可能需要几分钟才能完成。</value>
  </data>
  <data name="checkBoxScanWinUpdates.Text" xml:space="preserve">
    <value>Windows更新</value>
  </data>
  <data name="labelWinFeatureInfo.Text" xml:space="preserve">
    <value>使用WMI检测Windows功能，在某些系统上可能会缓慢甚至失败（通常表示系统损坏）。</value>
  </data>
  <data name="checkBoxScanWinFeatures.Text" xml:space="preserve">
    <value>Windows功能</value>
  </data>
  <data name="checkBoxScanStoreApps.Text" xml:space="preserve">
    <value>Windows商店应用</value>
  </data>
  <data name="checkBoxScanSteam.Text" xml:space="preserve">
    <value>Steam</value>
  </data>
  <data name="checkBoxScoop.Text" xml:space="preserve">
    <value>Scoop</value>
  </data>
  <data name="checkBoxOculus.Text" xml:space="preserve">
    <value>Oculus Store</value>
  </data>
  <data name="checkBoxChoco.Text" xml:space="preserve">
    <value>Chocolatey</value>
  </data>
  <data name="groupBoxAppStores.Text" xml:space="preserve">
    <value>要扫描的应用程序商店</value>
  </data>
  <data name="checkBoxScanRegistry.Text" xml:space="preserve">
    <value>注册表(推荐启用)</value>
  </data>
  <data name="checkBoxScanDrives.Text" xml:space="preserve">
    <value>驱动器（检测未注册的应用程序）</value>
  </data>
  <data name="checkBoxPreDefined.Text" xml:space="preserve">
    <value>基于预定义规则</value>
  </data>
  <data name="groupBox1.Text" xml:space="preserve">
    <value>在...中搜索应用程序</value>
  </data>
  <data name="tabPageDetection.Text" xml:space="preserve">
    <value>检测</value>
  </data>
  <data name="tabPageExternal.Text" xml:space="preserve">
    <value>外部工具</value>
  </data>
  <data name="checkBoxRemovable.Text" xml:space="preserve">
    <value>扫描可删除驱动</value>
    <comment>Scan pendrives, USB hard drives, SD Cards, etc.</comment>
  </data>
  <data name="checkBoxAutoInstallFolderDetect.Text" xml:space="preserve">
    <value>尝试自动检测自定义安装文件夹</value>
  </data>
  <data name="labelProgramFolders.Text" xml:space="preserve">
    <value>你可以指定安装应用程序的自定义文件夹（例如D:\applications）。BCU将使用这些文件夹来搜索卸载遗留问题、未注册的应用程序和其他一些内容。虽然没有必要，但列出这些文件夹可以让BCU更好地工作。

默认的Windows文件夹总是被扫描的，不需要将它们包含在此列表中。

使用完整的目录路径，每行一个路径。无效路径和不存在的目录将被忽略。</value>
  </data>
  <data name="groupBoxProgramFolders.Text" xml:space="preserve">
    <value>程序安装文件夹</value>
  </data>
  <data name="tabPageFolders.Text" xml:space="preserve">
    <value>文件夹</value>
  </data>
  <data name="groupBox3.Text" xml:space="preserve">
    <value>网络</value>
  </data>
  <data name="tabPageMisc.Text" xml:space="preserve">
    <value>其他</value>
  </data>
  <data name="$this.Text" xml:space="preserve">
    <value>Bulk Crap Uninstaller设置</value>
  </data>
  <data name="label3.Text" xml:space="preserve">
    <value>在应用程序列表双击</value>
  </data>
  <data name="groupBox2.Text" xml:space="preserve">
    <value>启动</value>
  </data>
</root>
