<?xml version="1.0" encoding="utf-8"?>
<root>
	<!-- 
		Microsoft ResX Schema
		Version 1.3
		The primary goals of this format is to allow a simple XML format 
		that is mostly human readable. The generation and parsing of the 
		various data types are done through the TypeConverter classes 
		associated with the data types.
		Example:
		... ado.net/XML headers & schema ...
		<resheader name="resmimetype">text/microsoft-resx</resheader>
		<resheader name="version">1.3</resheader>
		<resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
		<resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
		<data name="Name1">this is my long string</data>
		<data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
		<data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
			[base64 mime encoded serialized .NET Framework object]
		</data>
		<data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
			[base64 mime encoded string representing a byte array form of the .NET Framework object]
		</data>
		There are any number of "resheader" rows that contain simple 
		name/value pairs.
		Each data row contains a name, and value. The row also contains a 
		type or mimetype. Type corresponds to a .NET class that support 
		text/value conversion through the TypeConverter architecture. 
		Classes that don't support this are serialized and stored with the 
		mimetype set.
		The mimetype is used for serialized objects, and tells the 
		ResXResourceReader how to depersist the object. This is currently not 
		extensible. For a given mimetype the value must be set accordingly:
		Note - application/x-microsoft.net.object.binary.base64 is the format 
		that the ResXResourceWriter will generate, however the reader can 
		read any of the formats listed below.
		mimetype: application/x-microsoft.net.object.binary.base64
		value   : The object must be serialized with 
			: System.Serialization.Formatters.Binary.BinaryFormatter
			: and then encoded with base64 encoding.
		mimetype: application/x-microsoft.net.object.soap.base64
		value   : The object must be serialized with 
			: System.Runtime.Serialization.Formatters.Soap.SoapFormatter
			: and then encoded with base64 encoding.
		mimetype: application/x-microsoft.net.object.bytearray.base64
		value   : The object must be serialized into a byte array 
			: using a System.ComponentModel.TypeConverter
			: and then encoded with base64 encoding.
	-->
	
	<xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
		<xsd:element name="root" msdata:IsDataSet="true">
			<xsd:complexType>
				<xsd:choice maxOccurs="unbounded">
					<xsd:element name="data">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
								<xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
							</xsd:sequence>
							<xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
							<xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
							<xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="resheader">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
							</xsd:sequence>
							<xsd:attribute name="name" type="xsd:string" use="required" />
						</xsd:complexType>
					</xsd:element>
				</xsd:choice>
			</xsd:complexType>
		</xsd:element>
	</xsd:schema>
	<resheader name="resmimetype">
		<value>text/microsoft-resx</value>
	</resheader>
	<resheader name="version">
		<value>1.3</value>
	</resheader>
	<resheader name="reader">
		<value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
	</resheader>
	<resheader name="writer">
		<value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
	</resheader>
  <data name="Error_Invalid_number_of_arguments" xml:space="preserve">
    <value>Número de argumentos inválido.</value>
  </data>
  <data name="Error_UnknownUninstallerType" xml:space="preserve">
    <value>Tipo de desinstalador desconocido: {0}</value>
  </data>
  <data name="Error_InvalidPath" xml:space="preserve">
    <value>Ruta inválida, o el archivo no existe: {0}</value>
  </data>
  <data name="Error_NotSupported" xml:space="preserve">
    <value>Automatización de {0} desinstaladores no es soportado.</value>
  </data>
  <data name="Message_Starting" xml:space="preserve">
    <value>Desinstalar automáticamente "{0}"</value>
  </data>
  <data name="Message_UserCancelled" xml:space="preserve">
    <value>El usuario canceló la operación</value>
  </data>
  <data name="Message_Success" xml:space="preserve">
    <value>¡La automatización fue exitosa!</value>
  </data>
  <data name="Message_UninstallFailed" xml:space="preserve">
    <value>La desinstalación automática falló. Razón: {0}</value>
  </data>
  <data name="Message_Automation_SelectingNotBadButton" xml:space="preserve">
    <value>Selección del botón de opción no incluido en la lista negra: {0}</value>
  </data>
  <data name="Message_Automation_SelectingGoodButton" xml:space="preserve">
    <value>Selección del botón de opción conocido como bueno: {0}</value>
  </data>
  <data name="Message_Automation_FoundButtons" xml:space="preserve">
    <value>Botones de opción encontrados {0}.</value>
    <comment>{0} es el número de botones</comment>
  </data>
  <data name="Message_Automation_ClickingButton" xml:space="preserve">
    <value>Clic en el botón "{0}".</value>
    <comment>{0} es el nombre del botón</comment>
  </data>
  <data name="Message_Automation_PopupClosed" xml:space="preserve">
    <value>Ventana emergente cerrada.</value>
  </data>
  <data name="Message_Automation_PopupFound" xml:space="preserve">
    <value>Encontró una ventana emergente - "{0}".</value>
  </data>
  <data name="Message_Automation_PopupRecurringFound" xml:space="preserve">
    <value>¡Ventana emergente recurrente detectada!</value>
  </data>
  <data name="Message_Automation_Failed" xml:space="preserve">
    <value>La desinstalación automática falló.</value>
  </data>
  <data name="Message_Automation_WindowClosed" xml:space="preserve">
    <value>Ventana cerrada.</value>
  </data>
  <data name="Message_Automation_WindowFound" xml:space="preserve">
    <value>Ventana encontrada "{0}".</value>
    <comment>"{0}" es el nombre de la ventana</comment>
  </data>
  <data name="Message_Automation_WindowSearching" xml:space="preserve">
    <value>Buscando ventanas...</value>
  </data>
  <data name="Message_Automation_AppAttached" xml:space="preserve">
    <value>Adjuntado a "{0}"</value>
    <comment>0 es el nombre de la aplicación</comment>
  </data>
  <data name="Message_Automation_WaitingForNsisExtraction" xml:space="preserve">
    <value>Esperando que el desinstalador de NSIS se extraiga...</value>
  </data>
  <data name="Message_Automation_ProcessFailedToStart" xml:space="preserve">
    <value>El proceso no pudo iniciar.</value>
  </data>
</root>
