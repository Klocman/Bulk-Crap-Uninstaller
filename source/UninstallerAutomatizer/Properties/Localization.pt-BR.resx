<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Error_Invalid_number_of_arguments" xml:space="preserve">
    <value>Número inválido de argumentos.</value>
  </data>
  <data name="Error_UnknownUninstallerType" xml:space="preserve">
    <value>Tipo de desinstalador desconhecido: {0}</value>
  </data>
  <data name="Error_InvalidPath" xml:space="preserve">
    <value>Local incorreto ou arquivo inexistente: {0}</value>
  </data>
  <data name="Error_NotSupported" xml:space="preserve">
    <value>A automatização de {0} desinstaladores não é suportada.</value>
  </data>
  <data name="Message_Starting" xml:space="preserve">
    <value>Desinstalando automaticamente ''{0}''</value>
  </data>
  <data name="Message_UserCancelled" xml:space="preserve">
    <value>O usuário cancelou a operação</value>
  </data>
  <data name="Message_Success" xml:space="preserve">
    <value>A automação foi concluída com sucesso!</value>
  </data>
  <data name="Message_UninstallFailed" xml:space="preserve">
    <value>A desinstalação automática falhou. Motivo: {0}</value>
  </data>
  <data name="Message_Automation_SelectingNotBadButton" xml:space="preserve">
    <value>Selecionando o botão de opção não bloqueado: {0}</value>
  </data>
  <data name="Message_Automation_SelectingGoodButton" xml:space="preserve">
    <value>Selecionando o botão de opção conhecido como funcional: {0}</value>
  </data>
  <data name="Message_Automation_FoundButtons" xml:space="preserve">
    <value>Encontrados {0} botões de opção.</value>
    <comment>{0} is number of buttons</comment>
  </data>
  <data name="Message_Automation_ClickingButton" xml:space="preserve">
    <value>Clicando no botão "{0}".</value>
    <comment>{0} is button name</comment>
  </data>
  <data name="Message_Automation_PopupClosed" xml:space="preserve">
    <value>Pop-up fechado.</value>
  </data>
  <data name="Message_Automation_PopupFound" xml:space="preserve">
    <value>Encontrado uma janela pop-up: {0}</value>
  </data>
  <data name="Message_Automation_PopupRecurringFound" xml:space="preserve">
    <value>Janela pop-up recorrente encontrada!</value>
  </data>
  <data name="Message_Automation_Failed" xml:space="preserve">
    <value>A desinstalação automática falhou.</value>
  </data>
  <data name="Message_Automation_WindowClosed" xml:space="preserve">
    <value>Janela fechada.</value>
  </data>
  <data name="Message_Automation_WindowFound" xml:space="preserve">
    <value>Encontrado janela: "{0}".</value>
    <comment>"{0}" is window name</comment>
  </data>
  <data name="Message_Automation_WindowSearching" xml:space="preserve">
    <value>Procurando janelas...</value>
  </data>
  <data name="Message_Automation_AppAttached" xml:space="preserve">
    <value>Anexado a "{0}"</value>
    <comment>0 is application name</comment>
  </data>
  <data name="Message_Automation_WaitingForNsisExtraction" xml:space="preserve">
    <value>Aguardando o desinstalador NSIS extrair...</value>
  </data>
  <data name="Message_Automation_ProcessFailedToStart" xml:space="preserve">
    <value>O processo falou para iniciar.</value>
  </data>
  <data name="UninstallHandler_StartDaemon" xml:space="preserve">
    <value>Iniciando o automatizador como um daemon/serviço.</value>
  </data>
  <data name="UninstallHandler_DaemonStoppedReason" xml:space="preserve">
    <value>Daemon parado devido a:</value>
    <comment>This is followed by error/info message</comment>
  </data>
  <data name="UninstallHandler_InvalidProcessNumber" xml:space="preserve">
    <value>{0} não é um número válido</value>
  </data>
  <data name="Auto_BadButtons" xml:space="preserve">
    <value>Não | Recusar</value>
    <comment>Used to select buttons to automatically press when silently uninstallng some programs.
These are texts displayed on buttons that you most likely do not you want to press. Separated by |</comment>
  </data>
  <data name="Auto_CancelButtons" xml:space="preserve">
    <value>Cancelar | Abortar | Voltar</value>
    <comment>Used to select buttons to automatically press when silently uninstallng some programs.
These are texts displayed on buttons that you never want to press.
Separated by |</comment>
  </data>
  <data name="Auto_GoodButtons" xml:space="preserve">
    <value>Desinstalar | OK | Aceitar | Aplicar | Fechar | Sim | Excluir | Remover | Limpar</value>
    <comment>Used to select buttons to automatically press when silently uninstallng some programs.
These are texts displayed on buttons that you most likely  want to press to progress the uninstallation.
Separated by |</comment>
  </data>
</root>